/* Using global sytles is not recommended, prefer local styles via CSS Modules */

/*
 * box model like it should be
 *
 * http://www.paulirish.com/2012/box-sizing-border-box-ftw/
 */
html { box-sizing: border-box; }

*,
*::before,
*::after {
  box-sizing: inherit;
}

/*
 * kill document defaults margin & padding. We all do that all the time, right ?
 */
html,
body {
  margin: 0;
  padding: 0;
}

/*
 * page styles
 */
html {
  min-height: 100%;
  background: color(var(--colorPrimary) l(99%));
}

body {
  color: var(--colorText);
  font-size: 1rem;
  line-height: 1.5rem;

  /* system font https://medium.com/designing-medium/system-shock-6b1dc6d6596f */
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
}

/*
 * .phenomic-HeadingAnchor
 *
 * anchors for markdown headings, generated via markdown renderer, so require
 * global styling
 */
@custom-selector :--headings h1, h2, h3, h4, h5, h6;

:\--headings {
  position: relative;
}

:root {
  --phenomic-HeadingAnchor-width: 1.4rem;
  --phenomic-HeadingAnchor-margin: 0.4rem;
}

.phenomic-HeadingAnchor {
  display: inline-block;
  text-align: center;
  margin-left: calc(-1 * (var(--phenomic-HeadingAnchor-width) + var(--phenomic-HeadingAnchor-margin)));
  margin-right: var(--phenomic-HeadingAnchor-margin);
  width: var(--phenomic-HeadingAnchor-width);
  line-height: var(--phenomic-HeadingAnchor-width);
  text-decoration: none;
  opacity: 0.1;
  transition: opacity 0.2s;

  @nest :--headings:hover & {
    opacity: 1;
  }
}

/* minimal styling, prefer removing this and use local styles */
a {
  color: inherit;
  text-decoration: none;

  &:hover {
    text-decoration: underline;
  }
}

hr {
  border: 0;
  height: 1px;
  background: var(--colorNeutral);
  opacity: 0.2;
  margin: 2rem 0;
}
._1KhX5 {
  display: flex;
  height: 25vh;
  justify-content: center;
  align-items: center;
}

:root {
  --spinner-Color: #000;
  --spinner-Color-front: color(var(--spinner-Color) a(0.8));
  --spinner-Color-back: color(var(--spinner-Color) a(0.2));
}

._3i5XI {
  height: 5vh;
  min-height: 5rem;
  width: 5vh;
  min-width: 5rem;
  border: 6px solid var(--spinner-Color-back);
  border-top-color: var(--spinner-Color-front);
  border-radius: 100%;
  animation: _3H5Gy 0.6s infinite linear 0.25s;

  /* the opacity is used to lazyload the spinner, see animation delay */
  opacity: 0;
}

@keyframes _3H5Gy {
  from {
    opacity: 1;
    transform: rotate(0);
  }

  to {
    opacity: 1;
    transform: rotate(359deg);
  }
}
.fade-enter {
  opacity: 0;
}

.fade-enter.fade-enter-active {
  opacity: 1;
  transition: opacity 0.5s ease-in;
}

.fade-leave {
  opacity: 1;
}

.fade-leave.fade-leave-active {
  opacity: 0;
  transition: opacity 0.5s ease-in;
}
